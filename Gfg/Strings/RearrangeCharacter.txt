class Solution {
    static class Pair{
        char ch;
        int freq;
        Pair(char ch,int freq){
            this.ch=ch;
            this.freq=freq;
        }
    }
    public static String rearrangeString(String s) {
        // code here
        
        int n=s.length();
        Map<Character,Integer>freq=new HashMap<>();
        for(char c:s.toCharArray()){
            freq.put(c,freq.getOrDefault(c,0)+1);
        }
        PriorityQueue<Pair>pq=new PriorityQueue<>((a,b)->b.freq-a.freq);
        for(Map.Entry<Character,Integer>entry:freq.entrySet()){
            pq.offer(new Pair(entry.getKey(),entry.getValue()));
        }
        StringBuilder res=new StringBuilder();
        Pair prev=new Pair('#',-1);
        while(!pq.isEmpty()){
            Pair curr=pq.poll();
            res.append(curr.ch);
            curr.freq--;
            if(prev.freq>0){
                pq.offer(prev);
            }
            prev=curr;
        }
        if(res.length()!=n){
            return "";
        }
        else{
            return res.toString();
        }
    }
}