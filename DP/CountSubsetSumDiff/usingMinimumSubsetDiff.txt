package DynamicProgramming.CountSubsetSumDiff;

public class usingMinimumSubsetDiff {
    public static void main(String[] args) {
        int[]arr={1,1,2,3};
        int n=4;
        int range=0;
        int diff=1;
        for(int num:arr){
            range+=num;
        }
        int[][]dp=new int[n+1][range+1];
        if((diff+range)%2!=0){
            System.out.println(0);
            return;
        }
        for(int i=0;i<=n;i++) dp[i][0]=1;
        for(int i=1;i<=n;i++){
            for(int j=0;j<=range;j++){
                if(arr[i-1]<=j){
                    dp[i][j]=dp[i-1][j-arr[i-1]]+dp[i-1][j];
                }
                else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        System.out.println(dp[n][(diff+range)/2]);

    }
}
