package DynamicProgramming.CountSubsetSum;

public class usingSubsetsum {
    public static void main(String[] args) {
        int[]arr={2,3,5,6,8,10};
        int n=6;
        int sum=10;
        int[][]dp=new int[n+1][sum+1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=sum;j++){
                dp[i][j]=-1;

            }
        }
        int ans=countSubset(arr,n,sum,0,dp);
        System.out.println(ans);

    }
    public static int countSubset(int[]arr,int n,int sum,int idx,int[][]dp){
        if(sum==0) return 1;
        if(idx>=n)return 0;
        if(dp[idx][sum]!=-1) return dp[idx][sum];
        int include=0;
        if(arr[idx]<=sum){
                include=countSubset(arr,n,sum-arr[idx],idx+1,dp);
        }
        int exclude=countSubset(arr,n,sum,idx+1,dp);
        dp[idx][sum]=include+exclude;
        return dp[idx][sum];
    }
}
