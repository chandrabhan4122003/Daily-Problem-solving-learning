/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer>post=new ArrayList<>();
        Stack<TreeNode>st1=new Stack<>();
        Stack<Integer>st2=new Stack<>();
        if(root==null) return post;
        st1.push(root);
        while(!st1.isEmpty()){
            root=st1.pop();
            if(root.left!=null){
                st1.push(root.left);
            }
            if(root.right!=null){
                st1.push(root.right);
            }
            st2.push(root.val);
        }
        while(!st2.isEmpty()){
            post.add(st2.pop());
        }
        return post;
    }
}