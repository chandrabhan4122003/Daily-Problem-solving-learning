/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public boolean isSymmetric(TreeNode root) {
        if(root==null) return true;
        Stack<TreeNode> st1=new Stack<>();
        Stack<TreeNode>st2=new Stack<>();

        st1.push(root.left);
        st2.push(root.right);
        while(!st1.isEmpty()&&!st2.isEmpty()){
            TreeNode node1=st1.pop();
            TreeNode node2=st2.pop();
            if(node1==null&&node2==null) continue;
            if(node1==null||node2==null) return false;
            if(node1.val!= node2.val) return false;

            st1.push(node1.left);
            st1.push(node1.right);

            st2.push(node2.right);
            st2.push(node2.left);
        }
        return st1.isEmpty()&&st2.isEmpty();

    }
}